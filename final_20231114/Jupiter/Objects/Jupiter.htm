<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Jupiter.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Jupiter.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Oct 31 23:57:02 2023
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; mmWave_Process &rArr; Target2D_Process &rArr; mmWave_TargetProc &rArr; MmwDemo_cfarPeakGroupingCfarQualified
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[2e]">BOD_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">BOD_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">BB_IRQHandler</a> from irq_handler.o(i.BB_IRQHandler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2e]">BOD_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2c]">CAN0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2d]">CAN1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[1d]">DMA_IRQHandler</a> from dma.o(i.DMA_IRQHandler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[21]">GPIO0_E0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[22]">GPIO0_E1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[20]">GPIO0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[24]">GPIO1_E0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[25]">GPIO1_E1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[23]">GPIO1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[27]">GPIO2_E0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[28]">GPIO2_E1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[26]">GPIO2_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2a]">GPIO3_E0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2b]">GPIO3_E1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[29]">GPIO3_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[1f]">I2C_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from system_sky32b750.o(i.NMI_Handler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[30]">OSPI0_IRQHandler</a> from ospi_driver.o(i.OSPI0_IRQHandler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[31]">OSPI1_IRQHandler</a> from ospi_driver.o(i.OSPI1_IRQHandler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[15]">QSPI0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[16]">QSPI1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[a]">RES_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[2f]">SAR_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from irq_handler.o(i.SysTick_Handler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[33]">SystemInit</a> from system_sky32b750.o(i.SystemInit) referenced from startup_sky32b750.o(.text)
 <LI><a href="#[17]">TMRA_IRQHandler</a> from led.o(i.TMRA_IRQHandler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[18]">TMRB0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[19]">TMRB1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[1a]">TMRB2_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[1b]">TMRB3_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[d]">USCI0_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[e]">USCI1_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[f]">USCI2_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[10]">USCI3_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[11]">USCI4_IRQHandler</a> from usart_driver.o(i.USCI4_IRQHandler) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[12]">USCI5_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[13]">USCI6_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[14]">USCI7_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[b]">WDT_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[1c]">WWDG_IRQHandler</a> from startup_sky32b750.o(.text) referenced from startup_sky32b750.o(RESET)
 <LI><a href="#[34]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_sky32b750.o(.text)
 <LI><a href="#[32]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[34]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[35]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[49]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b3]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b4]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b5]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b6]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b7]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPIO0_E0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIO0_E1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIO1_E0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIO1_E1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPIO2_E0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPIO2_E1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPIO3_E0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPIO3_E1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TMRB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMRB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMRB2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMRB3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>USCI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>USCI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>USCI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>USCI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>USCI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>USCI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>USCI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sky32b750.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LRC_Caliber_HRC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_FFT2D_ZP_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarVelocity
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarRange
</UL>

<P><STRONG><a name="[b8]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarVelocity
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Process
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MmwDemo_cfarPeakGroupingCfarQualified
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamConfigInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_TargetProc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarVelocity
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarRange
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcFireHeight
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolutionCount
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FireProc
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcFireHeight
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolutionCount
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcFireHeight
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolutionCount
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FireProc
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcFireHeight
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FireProc
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolutionCount
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[be]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[bf]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[c1]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[3f]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[36]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>ADC_Init</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, adc_driver.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Init &rArr; Cnt_Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AE_Ctrl
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_Delay_ms
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FADC_SPI_WriteSingle
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[55]"></a>BB_CFAR_CFG0</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, bb_config.o(i.BB_CFAR_CFG0))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BB_CFAR_CFG0
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_VEL_CFAR_CONFIG
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_RANG_CFAR_CONFIG
</UL>

<P><STRONG><a name="[4e]"></a>BB_FFT2D_ZP_Init</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, bb_config.o(i.BB_FFT2D_ZP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BB_FFT2D_ZP_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip1_BB_PrepConfig
</UL>

<P><STRONG><a name="[ad]"></a>BB_FFT_ZP_Clear</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, bb_config.o(i.BB_FFT_ZP_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FftVelocity
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FftRange
</UL>

<P><STRONG><a name="[1e]"></a>BB_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, irq_handler.o(i.BB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>BB_IRQ_Init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bb_config.o(i.BB_IRQ_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip1_BB_PrepConfig
</UL>

<P><STRONG><a name="[4f]"></a>BB_Init</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, app_func.o(i.BB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BB_Init &rArr; BB_FFT2D_ZP_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_WBUF_W32
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_WBUF_W16
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_PrepConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_IRQ_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_FFT2D_ZP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_Init
</UL>

<P><STRONG><a name="[51]"></a>BB_PrepConfig</STRONG> (Thumb, 570 bytes, Stack size 12 bytes, bb_config.o(i.BB_PrepConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BB_PrepConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_Init
</UL>

<P><STRONG><a name="[54]"></a>BB_RANG_CFAR_CONFIG</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, bb_config.o(i.BB_RANG_CFAR_CONFIG))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BB_RANG_CFAR_CONFIG &rArr; BB_CFAR_CFG0
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_CFAR_CFG0
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarRange
</UL>

<P><STRONG><a name="[56]"></a>BB_VEL_CFAR_CONFIG</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, bb_config.o(i.BB_VEL_CFAR_CONFIG))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BB_VEL_CFAR_CONFIG &rArr; BB_CFAR_CFG0
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_CFAR_CFG0
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarVelocity
</UL>

<P><STRONG><a name="[53]"></a>BB_WBUF_W16</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, bb_config.o(i.BB_WBUF_W16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BB_WBUF_W16
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip1_BB_PrepConfig
</UL>

<P><STRONG><a name="[52]"></a>BB_WBUF_W32</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, bb_config.o(i.BB_WBUF_W32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BB_WBUF_W32
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip1_BB_PrepConfig
</UL>

<P><STRONG><a name="[ab]"></a>BB_waitISR</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, bb_config.o(i.BB_waitISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BB_waitISR
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FftVelocity
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FftRange
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarVelocity
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarRange
</UL>

<P><STRONG><a name="[95]"></a>Cache_Disable</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, system_sky32b750.o(i.Cache_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Cache_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[94]"></a>Cache_Invalidate</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, system_sky32b750.o(i.Cache_Invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Cache_Invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[a8]"></a>Chip1_ADC_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc_driver.o(i.Chip1_ADC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_BbPrep
</UL>

<P><STRONG><a name="[57]"></a>Chip1_BB_PrepConfig</STRONG> (Thumb, 714 bytes, Stack size 16 bytes, bb_config.o(i.Chip1_BB_PrepConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Chip1_BB_PrepConfig &rArr; BB_FFT2D_ZP_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_WBUF_W32
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_WBUF_W16
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_IRQ_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_FFT2D_ZP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_BbPrep
</UL>

<P><STRONG><a name="[4b]"></a>Cnt_Delay_ms</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, delay_driver.o(i.Cnt_Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cnt_Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_PLL_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SelfCheckK101W
</UL>

<P><STRONG><a name="[58]"></a>Cnt_Delay_us</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, delay_driver.o(i.Cnt_Delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_Delay_ms
</UL>

<P><STRONG><a name="[59]"></a>DMA_Clear_Irq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, dma.o(i.DMA_Clear_Irq))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[1d]"></a>DMA_IRQHandler</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, dma.o(i.DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Clear_Irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>Default_Param_Config</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, paramconfig.o(i.Default_Param_Config))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Effective_Param
</UL>

<P><STRONG><a name="[5c]"></a>EFC_Get_ActualAddress</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, efc.o(i.EFC_Get_ActualAddress))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFC_WriteInside1Page
</UL>

<P><STRONG><a name="[5a]"></a>EFC_ReWrite</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, efc.o(i.EFC_ReWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EFC_ReWrite &rArr; EFC_WriteInside1Page
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFC_WriteInside1Page
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Param_Config
</UL>

<P><STRONG><a name="[5b]"></a>EFC_WriteInside1Page</STRONG> (Thumb, 286 bytes, Stack size 36 bytes, efc.o(i.EFC_WriteInside1Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EFC_WriteInside1Page
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFC_Get_ActualAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFC_ReWrite
</UL>

<P><STRONG><a name="[4c]"></a>FADC_SPI_WriteSingle</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, fadc.o(i.FADC_SPI_WriteSingle))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FADC_SPI_WriteSingle
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[96]"></a>FPU_Enable</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, system_sky32b750.o(i.FPU_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5d]"></a>Func_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_func.o(i.Func_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Func_Init &rArr; BB_Init &rArr; BB_FFT2D_ZP_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIPEN_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Init
</UL>

<P><STRONG><a name="[4d]"></a>GPIO_AE_Ctrl</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, gpio.o(i.GPIO_AE_Ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_AE_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[5f]"></a>GPIO_Init</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, gpio_driver.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullUp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[61]"></a>GPIO_PullUp</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, gpio.o(i.GPIO_PullUp))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[60]"></a>GPIO_SetMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[67]"></a>Get_SysClk_Config</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, system_sky32b750.o(i.Get_SysClk_Config))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LRC_Caliber_HRC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
</UL>

<P><STRONG><a name="[8d]"></a>HRC_System_Clock_Update</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, system_sky32b750.o(i.HRC_System_Clock_Update))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_HRC_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[7f]"></a>HW_Delay_ms</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, delay.o(i.HW_Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIPEN
</UL>

<P><STRONG><a name="[66]"></a>HXTAL_Caliber_LRC</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, system_sky32b750.o(i.HXTAL_Caliber_LRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HXTAL_Caliber_LRC &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Open
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Div
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PLL
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Flash_WS
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysClk_Config
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_HRC_Init
</UL>

<P><STRONG><a name="[6d]"></a>LRC_Caliber_HRC</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, system_sky32b750.o(i.LRC_Caliber_HRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LRC_Caliber_HRC &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Open
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Div
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysClk_Config
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_HRC_Init
</UL>

<P><STRONG><a name="[a5]"></a>MPU_LocalConfig</STRONG> (Thumb, 704 bytes, Stack size 8 bytes, mpu_driver.o(i.MPU_LocalConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MPU_LocalConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>MmwDemo_cfarPeakGroupingCfarQualified</STRONG> (Thumb, 798 bytes, Stack size 120 bytes, app_func.o(i.MmwDemo_cfarPeakGroupingCfarQualified))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MmwDemo_cfarPeakGroupingCfarQualified
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_TargetProc
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_sky32b750.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OSPI0_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ospi_driver.o(i.OSPI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>OSPI1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ospi_driver.o(i.OSPI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>PLL_System_Clock_Update</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, system_sky32b750.o(i.PLL_System_Clock_Update))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_PLL_Init
</UL>

<P><STRONG><a name="[70]"></a>ParamConfigInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, paramconfig.o(i.ParamConfigInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ParamConfigInit &rArr; ResolutionCount &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolutionCount
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Effective_Param
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>PinMux_Set</STRONG> (Thumb, 320 bytes, Stack size 12 bytes, pinmux.o(i.PinMux_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PinMux_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[72]"></a>Prod_CalcFireHeight</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, product.o(i.Prod_CalcFireHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Prod_CalcFireHeight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CommHandleK101W
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SelfCheckK101W
</UL>

<P><STRONG><a name="[7a]"></a>Prod_CalcRptHeight</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, product.o(i.Prod_CalcRptHeight))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendFireMsgK101W
</UL>

<P><STRONG><a name="[73]"></a>Prod_CommHandleK101W</STRONG> (Thumb, 288 bytes, Stack size 64 bytes, product.o(i.Prod_CommHandleK101W))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Prod_CommHandleK101W &rArr; Prod_CalcFireHeight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Transmit_Bytes
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendPeriodicMsgK101W
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcFireHeight
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBcc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Word2Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XFProtocol_Analysis_Handle
</UL>

<P><STRONG><a name="[78]"></a>Prod_SelfCheckK101W</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, product.o(i.Prod_SelfCheckK101W))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Prod_SelfCheckK101W &rArr; Prod_CalcFireHeight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_Delay_ms
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Transmit_Bytes
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcFireHeight
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBcc
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_SelfCheck
</UL>

<P><STRONG><a name="[79]"></a>Prod_SendFireMsgK101W</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, product.o(i.Prod_SendFireMsgK101W))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Prod_SendFireMsgK101W &rArr; USART_Transmit_Bytes &rArr; USCI_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Transmit_Bytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CalcRptHeight
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBcc
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FireProc
</UL>

<P><STRONG><a name="[77]"></a>Prod_SendPeriodicMsgK101W</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, product.o(i.Prod_SendPeriodicMsgK101W))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Prod_SendPeriodicMsgK101W &rArr; USART_Transmit_Bytes &rArr; USCI_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Transmit_Bytes
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBcc
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CommHandleK101W
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FireProc
</UL>

<P><STRONG><a name="[7b]"></a>RF_CHIP1_Disable</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, rf_spi_config.o(i.RF_CHIP1_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RF_CHIP1_Disable &rArr; waveGenStop1 &rArr; RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteRegSPI_Fast
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenStop1
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_BbPrep
</UL>

<P><STRONG><a name="[7e]"></a>RF_CHIPEN</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rf_spi_config.o(i.RF_CHIPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RF_CHIPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Clock40M_En
</UL>

<P><STRONG><a name="[5e]"></a>RF_CHIPEN_Disable</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, rf_spi_config.o(i.RF_CHIPEN_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RF_CHIPEN_Disable &rArr; waveGenStop &rArr; RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteRegSPI_Fast
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenStop
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_Init
</UL>

<P><STRONG><a name="[81]"></a>RF_Clock40M_En</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rf_spi_config.o(i.RF_Clock40M_En))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RF_Clock40M_En &rArr; RF_CHIPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIPEN
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Init
</UL>

<P><STRONG><a name="[82]"></a>RF_ReadRegSPI</STRONG> (Thumb, 172 bytes, Stack size 12 bytes, spi_driver.o(i.RF_ReadRegSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RF_ReadRegSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SPI_CS_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Init
</UL>

<P><STRONG><a name="[83]"></a>RF_SPI_CS_CTRL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, spi_driver.o(i.RF_SPI_CS_CTRL))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteWaveSPI
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteRegSPI_Fast
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCmdSPI
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadRegSPI
</UL>

<P><STRONG><a name="[86]"></a>RF_WriteCmdSPI</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, spi_driver.o(i.RF_WriteCmdSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Transmit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SPI_CS_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenStop1
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenStop
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenStart1
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenClear_RF1
</UL>

<P><STRONG><a name="[7d]"></a>RF_WriteRegSPI_Fast</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, spi_driver.o(i.RF_WriteRegSPI_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RF_WriteRegSPI_Fast
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SPI_CS_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc6011_init_chip1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIPEN_Disable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIP1_Disable
</UL>

<P><STRONG><a name="[85]"></a>RF_WriteWaveSPI</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, spi_driver.o(i.RF_WriteWaveSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RF_WriteWaveSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Transmit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SPI_CS_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WaveSet
</UL>

<P><STRONG><a name="[63]"></a>Read_Param_From_Flash</STRONG> (Thumb, 380 bytes, Stack size 0 bytes, paramconfig.o(i.Read_Param_From_Flash))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Effective_Param
</UL>

<P><STRONG><a name="[88]"></a>SPI_Init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, spi_driver.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPI_Init &rArr; PinMux_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMux_Set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullUp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[8b]"></a>SYS_CLK_HRC_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sysclk_driver.o(i.SYS_CLK_HRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SYS_CLK_HRC_Init &rArr; HXTAL_Caliber_LRC &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Div
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HRC
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LRC_Caliber_HRC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRC_System_Clock_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[8e]"></a>SYS_CLK_PLL_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, sysclk_driver.o(i.SYS_CLK_PLL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SYS_CLK_PLL_Init &rArr; Cnt_Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Div
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PLL
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Flash_WS
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_System_Clock_Update
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[65]"></a>Save_Param_Config</STRONG> (Thumb, 818 bytes, Stack size 24 bytes, paramconfig.o(i.Save_Param_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Save_Param_Config &rArr; EFC_ReWrite &rArr; EFC_WriteInside1Page
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFC_ReWrite
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Word2Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Effective_Param
</UL>

<P><STRONG><a name="[90]"></a>Set_CanClk_Div</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_sky32b750.o(i.Set_CanClk_Div))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[68]"></a>Set_Flash_WS</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_sky32b750.o(i.Set_Flash_WS))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_PLL_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[8c]"></a>Set_HRC</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_sky32b750.o(i.Set_HRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_HRC
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_HRC_Init
</UL>

<P><STRONG><a name="[69]"></a>Set_PLL</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, system_sky32b750.o(i.Set_PLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Set_PLL
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_PLL_Init
</UL>

<P><STRONG><a name="[6c]"></a>Set_SysClk_Config</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, system_sky32b750.o(i.Set_SysClk_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Set_SysClk_Config &rArr; Set_PLL
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Div
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PLL
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Flash_WS
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CanClk_Div
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LRC_Caliber_HRC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
</UL>

<P><STRONG><a name="[6a]"></a>Set_SysClk_Div</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system_sky32b750.o(i.Set_SysClk_Div))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LRC_Caliber_HRC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_PLL_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_HRC_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, irq_handler.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>Sys_CalcVeloFftPt</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, main.o(i.Sys_CalcVeloFftPt))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[91]"></a>Sys_Init</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, main.o(i.Sys_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Sys_Init &rArr; SYS_CLK_HRC_Init &rArr; HXTAL_Caliber_LRC &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysClk_Div
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Flash_WS
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CanClk_Div
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRC_System_Clock_Update
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_PLL_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_CLK_HRC_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_CalcVeloFftPt
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>Sys_SelfCheck</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.Sys_SelfCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Sys_SelfCheck &rArr; Prod_SelfCheckK101W &rArr; Prod_CalcFireHeight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SelfCheckK101W
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>SystemInit</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, system_sky32b750.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit &rArr; Cache_Invalidate
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Enable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Invalidate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>TMRA_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, led.o(i.TMRA_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>Target2D_Process</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_func.o(i.Target2D_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Target2D_Process &rArr; mmWave_TargetProc &rArr; MmwDemo_cfarPeakGroupingCfarQualified
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_TargetProc
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FftVelocity
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FftRange
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarVelocity
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_CfarRange
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_BbPrep
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Process
</UL>

<P><STRONG><a name="[9e]"></a>USART_Init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, usart_driver.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART_Init &rArr; USCI_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_UART_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMux_Set
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>USART_Transmit_Bytes</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usart_driver.o(i.USART_Transmit_Bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART_Transmit_Bytes &rArr; USCI_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendPeriodicMsgK101W
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendFireMsgK101W
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CommHandleK101W
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SelfCheckK101W
</UL>

<P><STRONG><a name="[11]"></a>USCI4_IRQHandler</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, usart_driver.o(i.USCI4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sky32b750.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>USCI_Clear_ESR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usci.o(i.USCI_Clear_ESR))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_UART_Transmit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_UART_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Transmit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Init
</UL>

<P><STRONG><a name="[a2]"></a>USCI_Clear_ISR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usci.o(i.USCI_Clear_ISR))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_UART_Transmit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_UART_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Transmit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_SPI_Init
</UL>

<P><STRONG><a name="[8a]"></a>USCI_SPI_Init</STRONG> (Thumb, 138 bytes, Stack size 4 bytes, usci.o(i.USCI_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USCI_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ISR
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ESR
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[87]"></a>USCI_SPI_Transmit</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, usci.o(i.USCI_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ISR
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ESR
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteWaveSPI
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCmdSPI
</UL>

<P><STRONG><a name="[9f]"></a>USCI_UART_Init</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, usci.o(i.USCI_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USCI_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ISR
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ESR
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a0]"></a>USCI_UART_Transmit</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, usci.o(i.USCI_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USCI_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ISR
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USCI_Clear_ESR
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Transmit_Bytes
</UL>

<P><STRONG><a name="[a3]"></a>WDT_Enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wdt.o(i.WDT_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Open
</UL>

<P><STRONG><a name="[6b]"></a>WDT_Open</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, wdt.o(i.WDT_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WDT_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LRC_Caliber_HRC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HXTAL_Caliber_LRC
</UL>

<P><STRONG><a name="[75]"></a>Word2Byte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usart_protocol.o(i.Word2Byte))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Param_Config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CommHandleK101W
</UL>

<P><STRONG><a name="[a4]"></a>XFProtocol_Analysis_Handle</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, usart_protocol.o(i.XFProtocol_Analysis_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = XFProtocol_Analysis_Handle &rArr; Prod_CommHandleK101W &rArr; Prod_CalcFireHeight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CommHandleK101W
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[74]"></a>getBcc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usart_protocol.o(i.getBcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getBcc
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendPeriodicMsgK101W
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendFireMsgK101W
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_CommHandleK101W
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SelfCheckK101W
</UL>

<P><STRONG><a name="[32]"></a>main</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; mmWave_Process &rArr; Target2D_Process &rArr; mmWave_TargetProc &rArr; MmwDemo_cfarPeakGroupingCfarQualified
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_LocalConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Process
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XFProtocol_Analysis_Handle
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamConfigInit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_SelfCheck
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[98]"></a>mmWave_BbPrep</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, app_func.o(i.mmWave_BbPrep))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = mmWave_BbPrep &rArr; rc6011_init_chip1 &rArr; RF_WaveSet &rArr; RF_WriteWaveSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip1_ADC_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip1_BB_PrepConfig
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenStart1
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc6011_init_chip1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIP1_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>

<P><STRONG><a name="[9c]"></a>mmWave_CfarRange</STRONG> (Thumb, 590 bytes, Stack size 40 bytes, app_func.o(i.mmWave_CfarRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mmWave_CfarRange &rArr; BB_RANG_CFAR_CONFIG &rArr; BB_CFAR_CFG0
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_waitISR
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_RANG_CFAR_CONFIG
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>

<P><STRONG><a name="[9b]"></a>mmWave_CfarVelocity</STRONG> (Thumb, 822 bytes, Stack size 64 bytes, app_func.o(i.mmWave_CfarVelocity))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mmWave_CfarVelocity &rArr; BB_VEL_CFAR_CONFIG &rArr; BB_CFAR_CFG0
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_waitISR
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_VEL_CFAR_CONFIG
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>

<P><STRONG><a name="[99]"></a>mmWave_FftRange</STRONG> (Thumb, 640 bytes, Stack size 48 bytes, app_func.o(i.mmWave_FftRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mmWave_FftRange &rArr; BB_waitISR
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_waitISR
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_FFT_ZP_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>

<P><STRONG><a name="[9a]"></a>mmWave_FftVelocity</STRONG> (Thumb, 522 bytes, Stack size 32 bytes, app_func.o(i.mmWave_FftVelocity))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = mmWave_FftVelocity &rArr; BB_waitISR
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_waitISR
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_FFT_ZP_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>

<P><STRONG><a name="[ae]"></a>mmWave_FireProc</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, app_func.o(i.mmWave_FireProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mmWave_FireProc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendPeriodicMsgK101W
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prod_SendFireMsgK101W
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_Process
</UL>

<P><STRONG><a name="[a6]"></a>mmWave_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_func.o(i.mmWave_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mmWave_Init &rArr; Func_Init &rArr; BB_Init &rArr; BB_FFT2D_ZP_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadRegSPI
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Clock40M_En
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>mmWave_Process</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, app_func.o(i.mmWave_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mmWave_Process &rArr; Target2D_Process &rArr; mmWave_TargetProc &rArr; MmwDemo_cfarPeakGroupingCfarQualified
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_FireProc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>mmWave_TargetProc</STRONG> (Thumb, 600 bytes, Stack size 56 bytes, app_func.o(i.mmWave_TargetProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mmWave_TargetProc &rArr; MmwDemo_cfarPeakGroupingCfarQualified
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MmwDemo_cfarPeakGroupingCfarQualified
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Target2D_Process
</UL>

<P><STRONG><a name="[a9]"></a>rc6011_init_chip1</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, rf_spi_config.o(i.rc6011_init_chip1))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = rc6011_init_chip1 &rArr; RF_WaveSet &rArr; RF_WriteWaveSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteRegSPI_Fast
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waveGenClear_RF1
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WaveSet
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_BbPrep
</UL>

<P><STRONG><a name="[b0]"></a>waveGenClear_RF1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rf_spi_config.o(i.waveGenClear_RF1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = waveGenClear_RF1 &rArr; RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCmdSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc6011_init_chip1
</UL>

<P><STRONG><a name="[aa]"></a>waveGenStart1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rf_spi_config.o(i.waveGenStart1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = waveGenStart1 &rArr; RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCmdSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmWave_BbPrep
</UL>

<P><STRONG><a name="[80]"></a>waveGenStop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rf_spi_config.o(i.waveGenStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = waveGenStop &rArr; RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCmdSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIPEN_Disable
</UL>

<P><STRONG><a name="[7c]"></a>waveGenStop1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rf_spi_config.o(i.waveGenStop1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = waveGenStop1 &rArr; RF_WriteCmdSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCmdSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CHIP1_Disable
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[84]"></a>RF_WaveSet</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, rf_spi_config.o(i.RF_WaveSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = RF_WaveSet &rArr; RF_WriteWaveSPI &rArr; USCI_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteWaveSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc6011_init_chip1
</UL>

<P><STRONG><a name="[af]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, rf_spi_config.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc6011_init_chip1
</UL>

<P><STRONG><a name="[b1]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rf_spi_config.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc6011_init_chip1
</UL>

<P><STRONG><a name="[62]"></a>Get_Effective_Param</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, paramconfig.o(i.Get_Effective_Param))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Get_Effective_Param &rArr; Save_Param_Config &rArr; EFC_ReWrite &rArr; EFC_WriteInside1Page
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Param_Config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Param_From_Flash
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Param_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamConfigInit
</UL>

<P><STRONG><a name="[71]"></a>ResolutionCount</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, paramconfig.o(i.ResolutionCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ResolutionCount &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamConfigInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
